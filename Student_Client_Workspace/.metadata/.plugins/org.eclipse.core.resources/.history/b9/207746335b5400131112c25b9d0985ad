package Login;
import java.awt.Color;
import java.awt.Container;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import Controller.Manager;


public class LoginForm extends JFrame implements ActionListener, MouseListener{

	//컨텐츠 영역을 받기 위한 변수
	private Container contentPane = null;

//	//프레임 위치 좌표 변수
//	private int positionXOfFrame = 0;
//	private int positionYOfFrame = 0;

	//컴포넌트 변수
	public JTextField numberTextField = null;
	public  JTextField iDTextField = null;
	public  JPasswordField passwordTextField = null;
	private JButton loginButton = null;
	private JLabel registerLabel = null;
	private JButton cancelButton = null;

	//컨트롤러 클래스 변수
	private Manager manager = null;	

	//이미지의 경로
	private final ImageIcon img = new ImageIcon(".\\image\\LoginBanner(320x57).png");

	//생성자
	public LoginForm(){
		super("Log-in");					//프레임창 제목
		this.setAlwaysOnTop(true);
		this.setSize(325, 230);					//로그인 창 크기
		this.displayCenter();		//로그인 화면 중앙 위치
		this.initializeMember();			//멤버변수 초기화
		this.setLayout(null);		//전체 레이아웃 설정
		this.setResizable(false);			//크기 조절 불가능
		this.createLoginForm();
		//this.arrangeComponent();			//컴포넌트 배치
		this.addEventHandler();				//이벤트 처리기 등록
//		this.setLocation(positionXOfFrame, positionYOfFrame);	//프레임 위치 세팅
		//this.contentPane.add(loginPanel);	//프레임에 컴포넌트 등록

	} //생성자 끝

	//멤버변수 설정 및 초기화
	public void initializeMember(){
		//컨트롤러 클래스 객체 생성
		manager = new Manager();
		//컨텐츠 영역을 가져옴
		contentPane = getContentPane();
//		//프레임 위치 좌표(프레임이 화면의 중간에 위치)
//		positionXOfFrame = (int)this.getToolkit().getScreenSize().getWidth() / 2 - (int)this.getSize().getWidth() / 2;
//		positionYOfFrame = (int)this.getToolkit().getScreenSize().getHeight() / 2 - (int)this.getSize().getHeight() / 2;
	} //멤버변수 설정 및 초기화 끝
	
	//화면 중앙 표시
	private void displayCenter(){
		//화면의 크기
		Dimension screenDimension = Toolkit.getDefaultToolkit().getScreenSize();	
		//프레임의 크기
		Dimension frameDimension = this.getSize();
		//화면 넓이/2 - 프레임 넓이/2
		int xPosition = (int)(screenDimension.getWidth()/2 - frameDimension.getWidth()/2);
		//화면 높이/2 - 프레임 높이/2
		int yPosition = (int)(screenDimension.getHeight()/2 - frameDimension.getHeight()/2);
		this.setLocation(xPosition, yPosition);
	} //화면 중앙 표시 함수 끝

	//이벤트 처리기 등록
	public void addEventHandler(){
		//프레임의 X눌렀을 때 아무 작업 안하게 세팅
		this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

		//액션 등록
		loginButton.addActionListener(this);
		cancelButton.addActionListener(this);
		registerLabel.addMouseListener(this);

		//프레임의 X눌렀을 때 수행
		this.addWindowListener(new WindowAdapter(){
			public void windowClosing(WindowEvent we){
				LoginForm.this.exit();
			}
		});
	}
	//로그인 양식 생성
	private void createLoginForm(){
		//로그인 창 이미지 배너
		JPanel imagePanel = new JPanel(null){
			public void paintComponent(Graphics g){
				g.drawImage(img.getImage(),0, 0, 320, 57, null, null);
			}
		};
		imagePanel.setBounds(0, 0, 320, 57);
		contentPane.add(imagePanel);
		
		//접속 번호
		JLabel numberLabel = new JLabel("번호(1~30)");
		numberLabel.setBounds(23, 70, 62, 15);
		contentPane.add(numberLabel);

		numberTextField = new JTextField(); 
		numberTextField.setBounds(97, 67, 197, 21);
		contentPane.add(numberTextField);

		//아이디
		JLabel idLabel = new JLabel("아이디");
		idLabel.setBounds(23, 95, 62, 15);
		contentPane.add(idLabel);

		iDTextField = new JTextField(); 
		iDTextField.setBounds(97, 92, 197, 21);
		contentPane.add(iDTextField);

		//비밀번호
		JLabel passwordLabel = new JLabel("비밀번호");
		passwordLabel.setBounds(23, 120, 62, 15);
		contentPane.add(passwordLabel);

		passwordTextField = new JPasswordField();
		passwordTextField.setBounds(97, 117, 197, 21);
		contentPane.add(passwordTextField);

		//등록 레이블
		registerLabel = new JLabel("등록"); 
		registerLabel.setBounds(23, 147, 31, 15);
		contentPane.add(registerLabel);

		//로그인 버튼
		loginButton = new JButton("로그인");
		loginButton.setBounds(134, 147, 74, 23);
		contentPane.add(loginButton);

		//취소 버튼
		cancelButton = new JButton("취소");
		cancelButton.setBounds(220, 147, 74, 23);
		contentPane.add(cancelButton);
	} //로그인 양식 생성 함수 끝
//	//컴포넌트 배치
//	public void arrangeComponent(){
//
//		this.addComponent(numberLabel, 		0, 1, 1, 1);
//		this.addComponent(numberTextField, 	1, 1, 1, 1);
//		this.addComponent(iDLabel,			0, 2, 1, 1);
//		this.addComponent(iDTextField, 		1, 2, 1, 1);
//		this.addComponent(passwordLabel, 	0, 3, 1, 1);
//		this.addComponent(passwordTextField,1, 3, 1, 1);
//		this.addComponent(loginButton, 		0, 4, 1, 1);
//		this.addComponent(joinButton, 		1, 4, 1, 1);
//	}

//	//GridBagConstraints를 지정하는 메서드(컴포넌트, 열, 행, 넓이, 높이)
//	public void addComponent(Component component, int column, int row, int width, int height){
//		gridBagConstraints.gridx = column;
//		gridBagConstraints.gridy = row;
//		gridBagConstraints.gridwidth = width;
//		gridBagConstraints.gridheight = height;
//		gridBagLayout.setConstraints(component, gridBagConstraints);
//		loginPanel.add(component);
//	}

	//프레임의 X눌렀을 때 수행
	private void exit(){
		int result = JOptionPane.showConfirmDialog(this, "정말 끝내시겠습니까?", "Quit", JOptionPane.OK_CANCEL_OPTION, 
				JOptionPane.QUESTION_MESSAGE);
		if(result == JOptionPane.OK_OPTION){
			System.exit(0);
		}
	}

	//이벤트 처리기
	public void actionPerformed(ActionEvent actionEvent){
		//로그인 버튼을 눌렀을 때 수행
		if(actionEvent.getSource() == loginButton){
			System.out.println("[클라이언트] 로그인 버튼 클릭");
			manager.service("Login");			//컨트롤러에 수행 할 키 전송
			this.numberTextField.setText("");
			this.iDTextField.setText("");		//ID 입력창 리셋
			this.passwordTextField.setText(""); //Password 입력창 리셋
		}
		//회원가입 버튼을 눌렀을 때 수행
		else if(actionEvent.getSource() == cancelButton){
			exit();
		}
	}
	//마우스 이벤트 처리
	//범위 진입시
	public void mouseEntered(MouseEvent e) {
		//손 모양 커서로 변환
		Cursor cursor = new Cursor(Cursor.HAND_CURSOR);
		LoginForm.this.setCursor(cursor);
	} //범위 진입시 처리 끝
	//범위 탈출시
	public void mouseExited(MouseEvent e) {
		//기본 커서로 변환
		Cursor cursor = Cursor.getDefaultCursor();
		LoginForm.this.setCursor(cursor);
	} //범위 탈출시 처리 끝
	//범위 안에서 마우스 버튼 누를 시
	public void mousePressed(MouseEvent e) {
		//등록 레이블
		if(e.getSource() == registerLabel){
			//글자색 파란색으로 변경
			registerLabel.setForeground(Color.BLUE);
		}
	} //범위 안에서 마우스 버튼 누를 시 처리 끝
	//범위 안에서 마우스 버튼이 눌려진 후 릴리스될 시
	public void mouseReleased(MouseEvent e) {
		//등록 레이블
		if(e.getSource() == registerLabel){
			//글자색 검은색으로 변경
			registerLabel.setForeground(Color.BLACK);
		}
	} //범위 안에서 마우스 버튼이 눌려진 후 릴리스될 시 처리 끝
	//범위 안에서 마우스 버튼이 눌려지고 해제될 시
	public void mouseClicked(MouseEvent e) {
		//등록 양식 생성
//		new JoinForm();
	} //범위 안에서 마우스 버튼이 눌려지고 해제될 시 처리 끝
	//마우스 이벤트 처리 함수 끝
}