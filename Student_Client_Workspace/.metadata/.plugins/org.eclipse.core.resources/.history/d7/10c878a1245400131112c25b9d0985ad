//
//
//import java.awt.*;
//import java.awt.event.*;
//import java.io.File;
//
//import javax.swing.*;
//import javax.swing.border.*;
//
//import java.util.*;
//
////대기실 폼
//public class WaitingRoomForm extends JFrame implements ActionListener{
//	//	컨트롤러 클래스
//	private Manager manager;
//	//	메뉴바
//	private JMenuBar mb_waitRoom_menubar;
//	//	파일 메뉴들
//	private JMenu menu_waitRoom_filemenu;
//	private JMenuItem mi_waitRoom_makeroom;
//	private JMenuItem mi_waitRoom_join;
//	private JMenuItem mi_waitRoom_sendfile;
//	private JMenuItem mi_waitRoom_chat;
//	private JMenuItem mi_waitRoom_instantMsg;
//	private JMenuItem mi_waitRoom_logout;
//	private JMenuItem mi_waitRoom_exit;
//	//	서식 메뉴들
//	private JMenu menu_waitRoom_optionmenu;
//	private JMenuItem mi_waitRoom_font;
//	private JMenuItem mi_waitRoom_color;
//	//도움말 메뉴들
//	private JMenu menu_waitRoom_helpmenu;
//	private JMenuItem mi_waitRoom_help;
//	
//	private JPanel background;
//	private ImageIcon img;
//	
//	//방 리스트와 대기실에 접속한 유저 출력하는 리스트
//	public JList jlt_waitRoom_rooms;
//	public JList jlt_waitRoom_ids;
//	//	대기실대화 출력하는 창
//	public JTextPane jtp_waitRoom_chat;
//	//	귓속말 보내기 위해 대기실에 접속한 유저들을 담는 콤보박스
//	public JComboBox jcb_waitRoom_userlist;
//	//	메시지 쓰는 창
//	private JTextField jtf_waitRoom_write;
//	//버튼들
//	private JButton jb_waitRoom_makeRoom;
//	private JButton jb_waitRoom_changeAlias;
//	private JButton jb_waitRoom_quickJoin;
//	private JButton jb_waitRoom_exit;
//	private JButton jb_waitRoom_sendMsg;
//	private JButton jb_waitRoom_logout;
//	//방 리스트, 유저 리스트와 대화창을 담을 JScrollPane
//	private JScrollPane jsp_waitRoom_forRooms;
//	private JScrollPane jsp_waitRoom_forIds;
//	private JScrollPane jsp_waitRoom_forChat;
//	//	팝업 메뉴들
//	private JPopupMenu jpm_waitRoom_popupforIds;
//	private JMenuItem mi_waitRoom_privatechat;
//	private JMenuItem mi_waitRoom_sendnote;
//	private JMenuItem mi_waitRoom_sendFile;
//	//	유저 리스트와 방 리스트의 타이틀 보더
//	private TitledBorder tborder_waitRoom_forRooms;
//	private TitledBorder tborder_waitRoom_forIds;
//	
//	//방이름
//	public String roomname;
//	//폰트 이름
//	public String fontName;
//	//폰트 크기
//	public int fontSize;
//	//폰트 색깔
//	public int fontColor;
//	//귓말 받을 유저
//	private String toUser;
//	//선택한 유저
//	public String selectedId;
//	
//	public WaitingRoomForm(){
//		super("Waiting Room");
//		
//		this.setSize(800, 550);
//		//크기 조절 불가능
//		this.setResizable(false);
//		
//		img = new ImageIcon("bg1.jpg"); //이미지..
//		  
//		background = new JPanel(null){
//			public void paintComponent(Graphics e){ //대기실전체이미지
//				e.drawImage(img.getImage(),0, 0, 800, 550, null, null);
//			}
//		};
//		
//		manager = new Manager();
//		//		귓속말을 보내기 위해 방에 입장한 유저들을 콤보박스에 담을 유저 목록
//		Vector<String> userlist = new Vector<String>();
//		//		기본적으로 모두에게 메시지를 보낼 수 있게 추가
//		userlist.add("모두에게");
//		
//		mb_waitRoom_menubar			= new JMenuBar();
//		menu_waitRoom_filemenu		= new JMenu("메뉴");
//		mi_waitRoom_makeroom		= new JMenuItem("방 만들기");
//		mi_waitRoom_join			= new JMenuItem("입장하기");
//		mi_waitRoom_sendfile		= new JMenuItem("파일 보내기");
//		mi_waitRoom_chat			= new JMenuItem("1:1대화");
//		mi_waitRoom_instantMsg		= new JMenuItem("쪽지보내기");
//		mi_waitRoom_logout			= new JMenuItem("로그 아웃");
//		mi_waitRoom_exit			= new JMenuItem("종료");
//
//		menu_waitRoom_optionmenu 	= new JMenu("서식");
//		mi_waitRoom_font			= new JMenuItem("폰트");
//		mi_waitRoom_color			= new JMenuItem("컬러");
//		
//		menu_waitRoom_helpmenu		= new JMenu("도움말");
//		mi_waitRoom_help			= new JMenuItem("정보");
//		
//		jlt_waitRoom_rooms 			= new JList();
//		jlt_waitRoom_ids 			= new JList();
//		jtp_waitRoom_chat 			= new JTextPane();
//		jcb_waitRoom_userlist		= new JComboBox(userlist);
//		jtf_waitRoom_write 			= new JTextField(40);
//		jb_waitRoom_makeRoom		= new JButton("방 만들기");
//		jb_waitRoom_changeAlias 	= new JButton("닉네임 바꾸기");
//		jb_waitRoom_quickJoin		= new JButton("입장");
//		jb_waitRoom_exit			= new JButton("퇴장");
//		jb_waitRoom_sendMsg			= new JButton("보내기");
//		jb_waitRoom_logout			= new JButton("로그 아웃");
//		
//		jpm_waitRoom_popupforIds 	= new JPopupMenu();
//		mi_waitRoom_sendnote		= new JMenuItem("쪽지보내기");  
//		mi_waitRoom_privatechat		= new JMenuItem("1:1대화");   
//		mi_waitRoom_sendFile		= new JMenuItem("파일 보내기");   
//		
//		JButton[] buttons = {jb_waitRoom_makeRoom, jb_waitRoom_changeAlias, jb_waitRoom_quickJoin,
//				jb_waitRoom_exit, jb_waitRoom_sendMsg, jb_waitRoom_logout};
//		
//		//방 리스트, 유저 리스트와 대화창을 JScrollPane에 얹기
//		jsp_waitRoom_forRooms	= new JScrollPane(jlt_waitRoom_rooms, 
//				ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
//		jsp_waitRoom_forIds		= new JScrollPane(jlt_waitRoom_ids, 
//				ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
//		jsp_waitRoom_forChat	= new JScrollPane(jtp_waitRoom_chat, 
//				ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
//		
//		//		프레임이 유저 모니터의 정중앙에 위치하게 하기 위한 좌표
//		int x = (int)this.getToolkit().getScreenSize().getWidth() / 2 - (int)this.getSize().getWidth() / 2;
//		int y = (int)this.getToolkit().getScreenSize().getHeight() / 2 - (int)this.getSize().getHeight() / 2;
//		
//		//		폰트 관련 기본적인 세팅
//		fontName = "바탕";
//		fontSize = 12;
//		fontColor = Color.orange.getRGB();//this.jtp_waitRoom_chat.getForeground().getRGB();
//		toUser = "모두에게";
//		
//		//		버튼들에 대한 서식 세팅
//		for(int i = 0; i < buttons.length; i++){
//			buttons[i].setFont(new Font("Dialog", Font.BOLD, 12));
//			buttons[i].setMargin(new Insets(0, 0, 0, 0));
//			buttons[i].setHorizontalTextPosition(JButton.LEFT);
//		}
//		//		파일 메뉴에 들어갈 메뉴아이템 집어넣기
//		menu_waitRoom_filemenu.add(mi_waitRoom_makeroom);
//		menu_waitRoom_filemenu.add(mi_waitRoom_join);
//		menu_waitRoom_filemenu.add(mi_waitRoom_sendfile);
//		menu_waitRoom_filemenu.add(mi_waitRoom_chat);
//		menu_waitRoom_filemenu.add(mi_waitRoom_instantMsg);
//		menu_waitRoom_filemenu.addSeparator();
//		menu_waitRoom_filemenu.add(mi_waitRoom_logout);
//		menu_waitRoom_filemenu.add(mi_waitRoom_exit);
//		
//		//		서식 메뉴에 들어갈 메뉴아이템 집어넣기
//		menu_waitRoom_optionmenu.add(mi_waitRoom_font);
//		menu_waitRoom_optionmenu.add(mi_waitRoom_color);
//		
//		//		도움말 메뉴에 들어갈 메뉴아이템 집어넣기 
//		menu_waitRoom_helpmenu.add(mi_waitRoom_help);
//		
//		//		메뉴바에 메뉴 넣기
//		mb_waitRoom_menubar.add(menu_waitRoom_filemenu);
//		mb_waitRoom_menubar.add(menu_waitRoom_optionmenu);
//		mb_waitRoom_menubar.add(menu_waitRoom_helpmenu);
//		
//		//		팝업 메뉴에 메뉴아이템 집어 넣기
//		jpm_waitRoom_popupforIds.add(mi_waitRoom_privatechat);
//		jpm_waitRoom_popupforIds.add(mi_waitRoom_sendnote);
//		jpm_waitRoom_popupforIds.add(mi_waitRoom_sendFile);
//		
//		//		유저 리스트에 팝업 메뉴 추가
//		jlt_waitRoom_ids.add(jpm_waitRoom_popupforIds);
//		
//		//		리스트에 "대기방 리스트"라는 타이틀을 왼쪽 위에 달기
//		tborder_waitRoom_forRooms = BorderFactory.createTitledBorder("대기방 리스트");
//		tborder_waitRoom_forRooms.setTitleJustification(TitledBorder.LEFT);
//		tborder_waitRoom_forRooms.setTitleColor(Color.orange);
//		jsp_waitRoom_forRooms.setBorder(tborder_waitRoom_forRooms);
//		
//		//		리스트에 "접속자 리스트"라는 타이틀을 왼쪽 위에 달기
//		tborder_waitRoom_forIds = BorderFactory.createTitledBorder("접속자 리스트");
//		tborder_waitRoom_forIds.setTitleJustification(TitledBorder.LEFT);
//		tborder_waitRoom_forIds.setTitleColor(Color.orange);
//		jsp_waitRoom_forIds.setBorder(tborder_waitRoom_forIds);
//		
//		//		메뉴바를 프레임에 넣기
//		setJMenuBar(mb_waitRoom_menubar);
//		
//		//		컴포넌트들 배치
//		jsp_waitRoom_forRooms.setBounds(35, 15, 350, 250);
//		jsp_waitRoom_forIds.setBounds(415, 15, 350, 250);
//		jsp_waitRoom_forChat.setBounds(35, 280, 550, 150);
//		jcb_waitRoom_userlist.setBounds(35, 450, 80, 23);
//		jtf_waitRoom_write.setBounds(120, 450, 465, 25);
//		jb_waitRoom_makeRoom.setBounds(590, 390, 80, 25);
//		jb_waitRoom_changeAlias.setBounds(680, 390, 90, 25);
//		jb_waitRoom_quickJoin.setBounds(590, 420, 80, 25);
//		jb_waitRoom_exit.setBounds(680, 450, 90, 25);
//		jb_waitRoom_sendMsg.setBounds(590, 450, 80, 25);
//		jb_waitRoom_logout.setBounds(680, 420, 90, 25);
//		
//		//		컴포넌트들 추가
//		background.add(jsp_waitRoom_forRooms);
//		background.add(jsp_waitRoom_forIds);
//		background.add(jsp_waitRoom_forChat);
//		background.add(jcb_waitRoom_userlist);
//		background.add(jtf_waitRoom_write);
//		background.add(jb_waitRoom_makeRoom);
//		background.add(jb_waitRoom_changeAlias);
//		background.add(jb_waitRoom_quickJoin);
//		background.add(jb_waitRoom_exit);
//		background.add(jb_waitRoom_sendMsg);
//		background.add(jb_waitRoom_logout);
//		
//		add(background);
//		
//		jlt_waitRoom_rooms.setForeground(Color.orange);
//		jlt_waitRoom_ids.setForeground(Color.orange);
//		
//		DefaultListCellRenderer idList = (DefaultListCellRenderer)jlt_waitRoom_ids.getCellRenderer();
//		idList.setOpaque(false);
//		DefaultListCellRenderer roomList = (DefaultListCellRenderer)jlt_waitRoom_rooms.getCellRenderer();
//		roomList.setOpaque(false);
//		
//		background.setOpaque(false);
//		jtp_waitRoom_chat.setOpaque(false);
//		jlt_waitRoom_rooms.setOpaque(false);
//		jlt_waitRoom_ids.setOpaque(false);
//		jsp_waitRoom_forRooms.getViewport().setOpaque(false);
//		jsp_waitRoom_forIds.getViewport().setOpaque(false);
//		jsp_waitRoom_forChat.getViewport().setOpaque(false);
//		jsp_waitRoom_forRooms.setOpaque(false);
//		jsp_waitRoom_forIds.setOpaque(false);
//		jsp_waitRoom_forChat.setOpaque(false);
//		jcb_waitRoom_userlist.setOpaque(false);
//		jtf_waitRoom_write.setOpaque(false);
//		jb_waitRoom_makeRoom.setOpaque(false);
//		jb_waitRoom_changeAlias.setOpaque(false);
//		jb_waitRoom_quickJoin.setOpaque(false);
//		jb_waitRoom_exit.setOpaque(false);
//		jb_waitRoom_sendMsg.setOpaque(false);
//		jb_waitRoom_logout.setOpaque(false);
//		
//		//		프레임의 X를 눌렀을 때 아무런 동작을 안함
//		this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
//		//		프레임위치 세팅
//		this.setLocation(x, y);
//		//		대화창 에디트 불가능
//		jtp_waitRoom_chat.setEditable(false);
//		
//		//		프로그램 종료할 때 수행
//		this.addWindowListener(new WindowAdapter(){
//			public void windowClosing(WindowEvent we){
//				WaitingRoomForm.this.exit();
//			}
//		});
//		
//		//		이벤트 등록
//		mi_waitRoom_makeroom.addActionListener(this);	
//		mi_waitRoom_join.addActionListener(this);
//		mi_waitRoom_sendfile.addActionListener(this);
//		mi_waitRoom_chat.addActionListener(this);
//		mi_waitRoom_instantMsg.addActionListener(this);
//		mi_waitRoom_logout.addActionListener(this);
//		mi_waitRoom_exit.addActionListener(this);
//		mi_waitRoom_font.addActionListener(this);
//		mi_waitRoom_color.addActionListener(this);
//		mi_waitRoom_help.addActionListener(this);
//
//		jb_waitRoom_makeRoom.addActionListener(this);		
//		jb_waitRoom_changeAlias.addActionListener(this);
//		jb_waitRoom_quickJoin.addActionListener(this);
//		jb_waitRoom_exit.addActionListener(this);
//		jb_waitRoom_sendMsg.addActionListener(this);
//		jb_waitRoom_logout.addActionListener(this);
//		
//		mi_waitRoom_sendnote.addActionListener(this);
//		mi_waitRoom_privatechat.addActionListener(this);
//		mi_waitRoom_sendFile.addActionListener(this);
//		
//		jcb_waitRoom_userlist.addActionListener(this);
//		
//		//	팝업 메뉴를 띄우기 위한 유저 리스트에 대한 이벤트
//		jlt_waitRoom_rooms.addMouseListener(new MouseAdapter(){
//			public void mousePressed(MouseEvent e){
//				//	방을 선택하고 마우스 오른쪽버튼을 눌렀을 때만 발생
//				if(e.getButton() == MouseEvent.BUTTON3 && !jlt_waitRoom_rooms.isSelectionEmpty()){
//					//방 이름 세팅
//					roomname = (String)jlt_waitRoom_rooms.getSelectedValue();
//					//비번방이면 방이름에서 [비번]제거
//					if(roomname.startsWith("[비번]")){
//						roomname = roomname.substring(roomname.indexOf("]") + 2);
//					}
//					//방이름에서 현재 인원수와 제한인원수 표시 제거(1\2)
//					roomname = roomname.substring(0, roomname.indexOf("("));
//					//서버에 Flag정보 날
//					Transit.sendMsg("방정보/" + roomname);
//				}
//			}
//		});
//		
//		//	팝업 메뉴를 띄우기 위한 유저 리스트에 대한 이벤트
//		jlt_waitRoom_ids.addMouseListener(new MouseAdapter(){
//			public void mousePressed(MouseEvent e){
//				//	유저를 선택하고 마우스 오른쪽버튼을 눌렀을 때만 발생
//				if(e.getButton() == MouseEvent.BUTTON3 && !jlt_waitRoom_ids.isSelectionEmpty()){
//					//	선택한 유저를 담기
//					selectedId = jlt_waitRoom_ids.getSelectedValue().toString();
//					//	팝업 띄우기
//					jpm_waitRoom_popupforIds.show(e.getComponent(), e.getX(), e.getY());
//				}
//			}
//		});
//		
//		//	메시지 전송 창에서 엔터키에 대한 이벤트
//		jtf_waitRoom_write.addActionListener(new ActionListener(){
//			public void actionPerformed(ActionEvent ae){
//				WaitingRoomForm.this.sendMsg();
//			}
//		});
//	}
//	
//	public void actionPerformed(ActionEvent ae){
//		// 메뉴아이템에 방만들기 메뉴아이템이나 버튼을 눌렀을 때 수행
//		if(ae.getSource() == mi_waitRoom_makeroom || ae.getSource() == jb_waitRoom_makeRoom){
//			Manager.MAKEROOMFORM.setVisible(true);
//		}
//		// 메뉴아이템에 입장 메뉴아이템이나 버튼을 눌렀을 때 수행
//		else if(ae.getSource() == mi_waitRoom_join || ae.getSource() == jb_waitRoom_quickJoin){
//			// 방을 선택 안했을 경우 수행
//			if(jlt_waitRoom_rooms.isSelectionEmpty()){
//				JOptionPane.showMessageDialog(this, "입장할 방을 선택해 주시기 바랍니다.", "Join Error", JOptionPane.WARNING_MESSAGE);
//			}
//			// 방을 선택 했을 경우 수행
//			else{
//				//선택한 방 이름 세팅
//				roomname = (String)jlt_waitRoom_rooms.getSelectedValue();
//				// 방이름에서 현재 인원수와 제한인원수 표시 제거(1\2)
//				roomname = roomname.substring(0, roomname.indexOf("("));
//				//컨트롤러에 키값 전송
//				manager.service("JoinRoom");
//			}
//		}
//		//메뉴의 1:1대화 메뉴아이템 선택했을 때 수행
//		else if(ae.getSource() == mi_waitRoom_chat){
//			Transit.sendMsg("전체유저/1:1대화/");
//		}
//		//메뉴의 쪽지 메뉴아이템 선택했을 때 수행
//		else if(ae.getSource() == mi_waitRoom_instantMsg){
//			Transit.sendMsg("전체유저/쪽지/");
//		}
//		//메뉴의 폰트 메뉴아이템 선택했을 때 수행
//		else if(ae.getSource() == mi_waitRoom_font){
//			FontDialog fontChooser = new FontDialog();
//			//폰트 다이얼로그 띄움
//			int result = fontChooser.showDialog(this);
//			//확인 버튼 눌렀을 경우 수행
//			if (result == FontDialog.OK_OPTION){
//				//선택한 폰트 세팅
//				Font font = fontChooser.getSelectedFont(); 
//				//폰트 선택 안 된 경우 빠져나감
//				if(font == null){
//					return;
//				}
//				//폰트 이름 세팅
//				fontName = fontChooser.getSelectedFontFamily();
//				//폰트 크기 세팅
//				fontSize = fontChooser.getSelectedFontSize();
//			}
//		}
//		//메뉴의 컬러 메뉴아이템 선택했을 때 수행
//		else if(ae.getSource() == mi_waitRoom_color){
//			fontColor = JColorChooser.showDialog(this, "글자색", this.jtp_waitRoom_chat.getForeground()).getRGB();
//		}
//		//메뉴의 도움말 메뉴아이템 선택했을 때 수행
//		else if(ae.getSource() == mi_waitRoom_help){
//			JOptionPane.showMessageDialog(this, "Jay's Second-work\nChatting Project\nVersion 1.0",
//					"채팅창 정보", JOptionPane.INFORMATION_MESSAGE);
//		}
//		//닉네임 변경 버튼 눌렀을 경우 수행
//		else if(ae.getSource() == jb_waitRoom_changeAlias){
//			//변경할 닉네임 입력 창 띄움
//			String ChangeAlias = JOptionPane.showInputDialog(this, "변경할 닉네임을 적어주세요");
//			//입력한 값이 있으면 수행
//			if(ChangeAlias != null)
//				Transit.sendMsg("ChangeAlias/" + ChangeAlias + "/WaitingRoomForm");
//		}
//		//메뉴의 파일 보내기 메뉴아이템을 선택했을 때 수행
//		else if(ae.getSource() == mi_waitRoom_sendfile){
//			Transit.sendMsg("전체유저/파일 보내기/");
//		}
//		//메시지 보내는 버튼 눌렀을 경우 수행
//		else if(ae.getSource() == jb_waitRoom_sendMsg){
//			sendMsg();
//		}
//		//메뉴의 로그아웃 메뉴아이템이나 버튼 선택했을 때 수행
//		else if(ae.getSource() == jb_waitRoom_logout || ae.getSource() == mi_waitRoom_logout){
//			//로그아웃 여부 묻는 다이얼로그 띄움
//			int x = JOptionPane.showConfirmDialog(this, "정말 로그 아웃 하시겠습니까?", 
//						"Logout", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
//			//확인 눌렀을 때 수행
//			if(x == JOptionPane.OK_OPTION){
//				//대화창 리셋
//				this.jtp_waitRoom_chat.setText("");
//				//대기실 폼 안보이게 함
//				this.setVisible(false);
//				//대기실 폼 자원해제
//				this.dispose();
//				//컨트롤러에 키값 전송
//				manager.service("Logout");
//			}
//		}
//		//메뉴의 종료 메뉴아이템 선택시 수행
//		else if(ae.getSource() == mi_waitRoom_exit || ae.getSource() == jb_waitRoom_exit){
//			exit();
//		}
//		//콤보박스 선택했을 경우 수행
//		else if(ae.getSource() == jcb_waitRoom_userlist){
//			//선택한 유저 세팅
//			toUser = this.jcb_waitRoom_userlist.getSelectedItem().toString();
//		}
//		//팝업메뉴의 쪽지 보내기 눌렀을 경우 수행
//		else if(ae.getSource() == mi_waitRoom_sendnote){
//			//메시지 입력받는 다이얼로그 띄움
//			String msg = JOptionPane.showInputDialog("메시지를 입력하십시오.");
//			//아무것도 입력 안했을 경우 수행
//			if(msg.length() == 0){
//				JOptionPane.showMessageDialog(this, "메시지를 입력해 주십시오.", "InstantMsg Error", JOptionPane.WARNING_MESSAGE);
//			}
//			//입력 한 경우 수행
//			else{
//				Transit.sendMsg("쪽지/" + msg + "/" + this.selectedId);
//			}
//		}
//		//팝업 메뉴의 1:1 대화 메뉴아이템을 선택한 경우 수행
//		else if(ae.getSource() == mi_waitRoom_privatechat){
//			Transit.sendMsg("1:1대화요청/" + selectedId);
//		}
//		//팝업 메뉴의 파일 보내기 메뉴아이템을 선택한 경우 수
//		else if(ae.getSource() == mi_waitRoom_sendFile){
//			//선택한 유저 세팅
//			String selectedId = this.jlt_waitRoom_ids.getSelectedValue().toString();
//			//JFileChooser 열기
//			JFileChooser fileOpen = new JFileChooser("C:\\");
//			fileOpen.showOpenDialog(this);
//			File fileName = fileOpen.getSelectedFile();
//
//			if(fileName == null){
//				JOptionPane.showMessageDialog(fileOpen, "전송할 파일을 선택해 주시기 바랍니다.", "File Send Error", JOptionPane.WARNING_MESSAGE);
//			}
//			else{
//				new SendFile(Manager.WAITINGROOMFORM, fileName);
//				Transit.sendMsg("파일전송/" + selectedId);
//			}
//		}
//	}
//	
//	//메시지 입력창에 메시지를 입력하고 엔터나 버튼 눌렀을 경우 수행
//	private void sendMsg(){
//		String msg = jtf_waitRoom_write.getText();
//		if(msg.length() == 0){
//			msg = " ";
//		}
//		Transit.sendMsg("대기실대화/" + msg + "/" + fontName + "/" + fontSize + "/" + fontColor + "/" + toUser);
//		jtf_waitRoom_write.setText("");
//	}
//	
//	private void exit(){
//		//		정말 종료할건지 물어보는 다이얼로그
//		int x = JOptionPane.showConfirmDialog(this, "정말 끝내시겠습니까?", "Quit", JOptionPane.OK_CANCEL_OPTION, 
//					JOptionPane.QUESTION_MESSAGE);
//		//		확인 버튼 눌렀을 때 수행
//		if(x == JOptionPane.OK_OPTION){
//			//	Flag 정보 Out 전송
//			manager.service("Logout");
//			//	프로그램 종료
//			System.exit(0);
//		}
//	}
//}